Q1. Query all columns for all American cities in the CITY table with populations larger than 100000.
The CountryCode for America is USA.

ANS
SELECT * FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 100000;
========================================
Q2. Query the NAME field for all American cities in the CITY table with populations larger than 120000.
The CountryCode for America is USA.

ANS
SELECT NAME FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 120000;
========================================
Q3. Query all columns (attributes) for every row in the CITY table.

ANS
SELECT * FROM CITY;
=========================================
Q4. Query all columns for a city in CITY with the ID 1661.

ANS
SELECT * FROM CITY WHERE ID = 1661; 
=========================================
Q5. Query all attributes of every Japanese city in the CITY table. The COUNTRYCODE for Japan is
JPN.

ANS
SELECT * FROM CITY WHERE COUNTRYCODE = 'JPN';        
=========================================
Q6. Query the names of all the Japanese cities in the CITY table. The COUNTRYCODE for Japan is
JPN.

ANS
SELECT NAME FROM CITY WHERE COUNTRYCODE = 'JPN';        
=========================================
Q7. Query a list of CITY and STATE from the STATION table.

ANS
SELECT CITY,STATE FROM STATION;       
=========================================
Q8. Query a list of CITY names from STATION for cities that have an even ID number. Print the results
in any order, but exclude duplicates from the answer.

ANS
SELECT DISTINCT CITY FROM STATION WHERE MOD(ID,2)=0 ORDER BY CITY ASC;       
===========================================
Q9. Find the difference between the total number of CITY entries in the table and the number of
distinct CITY entries in the table

ANS
SELECT COUNT(CITY) - COUNT(DISTINCT CITY) FROM STATION;       
==========================================
Q10. Query the two cities in STATION with the shortest and longest CITY names, as well as their
respective lengths (i.e.: number of characters in the name). If there is more than one smallest or
largest city, choose the one that comes first when ordered alphabetically.

ANS
select city, length(city) from station order by length(city) DESC,city ASC fetch first row only;
select city, length(city) from station order by length(city) asc ,city asc fetch first row only;      
==============================================
Q11. Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result
cannot contain duplicates.
Input Format

ANS
select distinct (city)
from station
where city like 'A%' or city like 'E%' or city like 'I%' or city like 'O%' or city like 'U%'
order by city;
==============================================
Q12. Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot
contain duplicates.

ANS
select distinct (city)
from station
where city like '%A' or city like '%E' or city like '%I' or city like '%O' or city like '%U';
==============================================
Q13. Query the list of CITY names from STATION that do not start with vowels. Your result cannot
contain duplicates.

ANS
select distinct city
from station
where 
upper(substr(city,1,1)) not in ('a','e','i','o','u') 
and 
lower(substr(city,1,1)) not in ('a','e','i','o','u'); 
===========================================
Q15. Query the list of CITY names from STATION that either do not start with vowels or do not end
with vowels. Your result cannot contain duplicates

ANS
select distinct city
from station
where 
upper(substr(city,1,1)) not in ('a','e','i','o','u') 
and 
lower(substr(city,length(city),1)) not in ('a','e','i','o','u');
===========================================
